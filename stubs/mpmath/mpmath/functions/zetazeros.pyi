from _typeshed import Incomplete

def find_rosser_block_zero(ctx, n): ...
def wpzeros(t): ...
def separate_zeros_in_block(
    ctx, zero_number_block, T, V, limitloop: Incomplete | None = None, fp_tolerance: Incomplete | None = None
): ...
def separate_my_zero(ctx, my_zero_number, zero_number_block, T, V, prec): ...
def sure_number_block(ctx, n): ...
def compute_triple_tvb(ctx, n): ...

ITERATION_LIMIT: int

def search_supergood_block(ctx, n, fp_tolerance): ...
def count_variations(V): ...
def pattern_construct(ctx, block, T, V): ...
def zetazero(ctx, n, info: bool = False, round: bool = True): ...
def gram_index(ctx, t): ...
def count_to(ctx, t, T, V): ...
def comp_fp_tolerance(ctx, n): ...
def nzeros(ctx, t): ...
def backlunds(ctx, t): ...
