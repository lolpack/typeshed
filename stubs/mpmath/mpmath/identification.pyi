from _typeshed import Incomplete

def round_fixed(x, prec): ...

class IdentificationMethods: ...

def pslq(ctx, x, tol: Incomplete | None = None, maxcoeff: int = 1000, maxsteps: int = 100, verbose: bool = False): ...
def findpoly(ctx, x, n: int = 1, **kwargs): ...
def fracgcd(p, q): ...
def pslqstring(r, constants): ...
def prodstring(r, constants): ...
def quadraticstring(ctx, t, a, b, c): ...

transforms: Incomplete

def identify(
    ctx, x, constants=[], tol: Incomplete | None = None, maxcoeff: int = 1000, full: bool = False, verbose: bool = False
): ...
