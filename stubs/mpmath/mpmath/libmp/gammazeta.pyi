from _typeshed import Incomplete

from .backend import gmpy as gmpy
from .libelefun import (
    mpf_cos_pi as mpf_cos_pi,
    mpf_cos_sin as mpf_cos_sin,
    mpf_cosh as mpf_cosh,
    mpf_cosh_sinh as mpf_cosh_sinh,
    mpf_ln_sqrt2pi as mpf_ln_sqrt2pi,
)
from .libmpf import (
    fnone as fnone,
    mpf_sqrt as mpf_sqrt,
    reciprocal_rnd as reciprocal_rnd,
    round_ceiling as round_ceiling,
    round_down as round_down,
    round_up as round_up,
    sqrt_fixed as sqrt_fixed,
)

def catalan_fixed(prec): ...
def khinchin_fixed(prec): ...
def glaisher_fixed(prec): ...
def apery_fixed(prec): ...
def euler_fixed(prec): ...
def mertens_fixed(prec): ...
def twinprime_fixed(prec): ...

mpf_euler: Incomplete
mpf_apery: Incomplete
mpf_khinchin: Incomplete
mpf_glaisher: Incomplete
mpf_catalan: Incomplete
mpf_mertens: Incomplete
mpf_twinprime: Incomplete
MAX_BERNOULLI_CACHE: int
bernoulli_cache: Incomplete
f3: Incomplete
f6: Incomplete

def bernoulli_size(n): ...

BERNOULLI_PREC_CUTOFF: Incomplete

def mpf_bernoulli(n, prec, rnd: Incomplete | None = None): ...
def mpf_bernoulli_huge(n, prec, rnd: Incomplete | None = None): ...
def bernfrac(n): ...
def mpf_harmonic(x, prec, rnd): ...
def mpc_harmonic(z, prec, rnd): ...
def mpf_psi0(x, prec, rnd="d"): ...
def mpc_psi0(z, prec, rnd="d"): ...
def mpf_psi(m, x, prec, rnd="d"): ...
def mpc_psi(m, z, prec, rnd="d"): ...

borwein_cache: Incomplete

def borwein_coefficients(n): ...

ZETA_INT_CACHE_MAX_PREC: int
zeta_int_cache: Incomplete

def mpf_zeta_int(s, prec, rnd="d"): ...
def mpf_zeta(s, prec, rnd="d", alt: int = 0): ...
def mpc_zeta(s, prec, rnd="d", alt: int = 0, force: bool = False): ...
def mpf_altzeta(s, prec, rnd="d"): ...
def mpc_altzeta(s, prec, rnd="d"): ...

mpf_zetasum: Incomplete

def pow_fixed(x, n, wp): ...

sieve_cache: Incomplete
primes_cache: Incomplete
mult_cache: Incomplete

def primesieve(n): ...
def zetasum_sieved(critical_line, sre, sim, a, n, wp): ...

ZETASUM_SIEVE_CUTOFF: int

def mpc_zetasum(s, a, n, derivatives, reflect, prec): ...

MAX_GAMMA_TAYLOR_PREC: int
GAMMA_STIRLING_BETA: float
SMALL_FACTORIAL_CACHE_SIZE: int
gamma_taylor_cache: Incomplete
gamma_stirling_cache: Incomplete
small_factorial_cache: Incomplete

def zeta_array(N, prec): ...
def gamma_taylor_coefficients(inprec): ...
def gamma_fixed_taylor(xmpf, x, wp, prec, rnd, type): ...
def stirling_coefficient(n): ...
def real_stirling_series(x, prec): ...
def complex_stirling_series(x, y, prec): ...
def mpf_gamma(x, prec, rnd: str = "d", type: int = 0): ...
def mpc_gamma(z, prec, rnd: str = "d", type: int = 0): ...
def mpf_factorial(x, prec, rnd: str = "d"): ...
def mpc_factorial(x, prec, rnd: str = "d"): ...
def mpf_rgamma(x, prec, rnd: str = "d"): ...
def mpc_rgamma(x, prec, rnd: str = "d"): ...
def mpf_loggamma(x, prec, rnd: str = "d"): ...
def mpc_loggamma(z, prec, rnd: str = "d"): ...
def mpf_gamma_int(n, prec, rnd="d"): ...
