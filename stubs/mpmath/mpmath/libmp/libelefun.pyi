from _typeshed import Incomplete
from bisect import bisect as bisect

from .libmpf import (
    fhalf as fhalf,
    from_float as from_float,
    round_down as round_down,
    round_floor as round_floor,
    round_nearest as round_nearest,
    to_float as to_float,
)

EXP_COSH_CUTOFF: int
EXP_SERIES_U_CUTOFF: int
COS_SIN_CACHE_PREC: int
COS_SIN_CACHE_STEP: int
cos_sin_cache: Incomplete
MAX_LOG_INT_CACHE: int
log_int_cache: Incomplete
LOG_TAYLOR_PREC: int
LOG_TAYLOR_SHIFT: int
log_taylor_cache: Incomplete
LOG_AGM_MAG_PREC_RATIO: int
ATAN_TAYLOR_PREC: int
ATAN_TAYLOR_SHIFT: int
atan_taylor_cache: Incomplete
cache_prec_steps: Incomplete

def constant_memo(f): ...
def def_mpf_constant(fixed): ...
def bsp_acot(q, a, b, hyperbolic): ...
def acot_fixed(a, prec, hyperbolic): ...
def machin(coefs, prec, hyperbolic: bool = False): ...
def ln2_fixed(prec): ...
def ln10_fixed(prec): ...

CHUD_A: Incomplete
CHUD_B: Incomplete
CHUD_C: Incomplete
CHUD_D: Incomplete

def bs_chudnovsky(a, b, level, verbose): ...
def pi_fixed(prec, verbose: bool = False, verbose_base: Incomplete | None = None): ...
def degree_fixed(prec): ...
def bspe(a, b): ...
def e_fixed(prec): ...
def phi_fixed(prec): ...

mpf_phi: Incomplete
mpf_pi: Incomplete
mpf_e: Incomplete
mpf_degree: Incomplete
mpf_ln2: Incomplete
mpf_ln10: Incomplete

def ln_sqrt2pi_fixed(prec): ...
def sqrtpi_fixed(prec): ...

mpf_sqrtpi: Incomplete
mpf_ln_sqrt2pi: Incomplete

def mpf_pow(s, t, prec, rnd="d"): ...
def int_pow_fixed(y, n, prec): ...
def nthroot_fixed(y, n, prec, exp1): ...
def mpf_nthroot(s, n, prec, rnd="d"): ...
def mpf_cbrt(s, prec, rnd="d"): ...
def log_int_fixed(n, prec, ln2: Incomplete | None = None): ...
def agm_fixed(a, b, prec): ...
def log_agm(x, prec): ...
def log_taylor(x, prec, r: int = 0): ...
def log_taylor_cached(x, prec): ...
def mpf_log(x, prec, rnd="d"): ...
def mpf_log_hypot(a, b, prec, rnd): ...
def atan_newton(x, prec): ...
def atan_taylor_get_cached(n, prec): ...
def atan_taylor(x, prec): ...
def atan_inf(sign, prec, rnd): ...
def mpf_atan(x, prec, rnd="d"): ...
def mpf_atan2(y, x, prec, rnd="d"): ...
def mpf_asin(x, prec, rnd="d"): ...
def mpf_acos(x, prec, rnd="d"): ...
def mpf_asinh(x, prec, rnd="d"): ...
def mpf_acosh(x, prec, rnd="d"): ...
def mpf_atanh(x, prec, rnd="d"): ...
def mpf_fibonacci(x, prec, rnd="d"): ...
def exponential_series(x, prec, type: int = 0): ...
def exp_basecase(x, prec): ...
def exp_expneg_basecase(x, prec): ...
def cos_sin_basecase(x, prec): ...
def mpf_exp(x, prec, rnd="d"): ...
def mpf_cosh_sinh(x, prec, rnd="d", tanh: int = 0): ...
def mod_pi2(man, exp, mag, wp): ...
def mpf_cos_sin(x, prec, rnd="d", which: int = 0, pi: bool = False): ...
def mpf_cos(x, prec, rnd="d"): ...
def mpf_sin(x, prec, rnd="d"): ...
def mpf_tan(x, prec, rnd="d"): ...
def mpf_cos_sin_pi(x, prec, rnd="d"): ...
def mpf_cos_pi(x, prec, rnd="d"): ...
def mpf_sin_pi(x, prec, rnd="d"): ...
def mpf_cosh(x, prec, rnd="d"): ...
def mpf_sinh(x, prec, rnd="d"): ...
def mpf_tanh(x, prec, rnd="d"): ...
def cos_sin_fixed(x, prec, pi2: Incomplete | None = None): ...
def exp_fixed(x, prec, ln2: Incomplete | None = None): ...

mpf_exp: Incomplete
mpf_log: Incomplete
mpf_cos: Incomplete
mpf_sin: Incomplete
mpf_pow: Incomplete
exp_fixed: Incomplete
cos_sin_fixed: Incomplete
log_int_fixed: Incomplete
