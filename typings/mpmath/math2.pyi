"""
This type stub file was generated by pyright.
"""

"""
This module complements the math and cmath builtin modules by providing
fast machine precision versions of some additional functions (gamma, ...)
and wrapping math/cmath functions so that they can be called with either
real or complex arguments.
"""
pi = ...
e = ...
sqrt2 = ...
sqrt5 = ...
phi = ...
ln2 = ...
ln10 = ...
euler = ...
catalan = ...
khinchin = ...
apery = ...
logpi = ...
def math_log(x): # -> float:
    ...

def math_sqrt(x): # -> float:
    ...

pow = ...
log = ...
sqrt = ...
exp = ...
cos = ...
sin = ...
tan = ...
acos = ...
asin = ...
atan = ...
cosh = ...
sinh = ...
tanh = ...
floor = ...
ceil = ...
cos_sin = ...
cbrt = ...
def nthroot(x, n):
    ...

cospi = ...
sinpi = ...
def tanpi(x): # -> complex:
    ...

def cotpi(x): # -> complex:
    ...

INF = ...
NINF = ...
NAN = ...
EPS = ...
_exact_gamma = ...
_max_exact_gamma = ...
_lanczos_g = ...
_lanczos_p = ...
gamma = ...
def rgamma(x):
    ...

def factorial(x):
    ...

def arg(x): # -> float:
    ...

def loggamma(x): # -> float | complex:
    ...

_psi_coeff = ...
digamma = ...
_erfc_coeff_P = ...
_erfc_coeff_Q = ...
def erf(x): # -> float:
    """
    erf of a real number.
    """
    ...

def erfc(x): # -> float:
    """
    erfc of a real number.
    """
    ...

gauss42 = ...
EI_ASYMP_CONVERGENCE_RADIUS = ...
def ei_asymp(z, _e1=...):
    ...

def ei_taylor(z, _e1=...):
    ...

def ei(z, _e1=...): # -> float | complex:
    ...

def e1(z): # -> float | complex:
    ...

_zeta_int = ...
_zeta_P = ...
_zeta_Q = ...
_zeta_1 = ...
_zeta_0 = ...
def zeta(s): # -> complex | Any | float:
    """
    Riemann zeta function, real argument
    """
    ...

